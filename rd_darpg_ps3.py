# -*- coding: utf-8 -*-
"""RD_DARPG_PS3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YNV76CntviGIwanvhtJrQUdGHmgndAMz
"""

!pip install faster-whisper
!apt-get update
!apt-get install libcublas11

# import whisper
import time

# model = whisper.load_model('large-v2')
# result = model.transcribe("/content/Monday at 14-08 1.m4a")
# output=result["text"]

# with open('output.txt', 'w',encoding="utf-8") as f:
#     f.write(output)

from faster_whisper import WhisperModel
model_size = "large"
# Run on GPU with FP16
model = WhisperModel(model_size, compute_type="float16")
# or run on GPU with INT8
# model = WhisperModel(model_size, device="cuda", compute_type="int8_float16")
# or run on CPU with INT8
# model = WhisperModel(model_size, device="cpu", compute_type="int8")
start = time.time()
segments, info = model.transcribe("/content/9971825798.mp3", beam_size=5)

print("Detected language '%s' with probability %f" % (info.language, info.language_probability))

for segment in segments:
    print(segment.text)
end = time.time()
print(end - start)

!pip install googletrans

from faster_whisper import WhisperModel
from googletrans import Translator
import time

def translate_to_english(text, source_lang):
    translator = Translator()
    translated_text = translator.translate(text, src=source_lang, dest='en').text
    return translated_text

model_size = "large"
model = WhisperModel(model_size, compute_type="float16")

start = time.time()
segments, info = model.transcribe("/content/9971825798.mp3", beam_size=5)

print("Detected language '%s' with probability %f" % (info.language, info.language_probability))

for segment in segments:
    if info.language in ['hi', 'hin']:  # Assuming 'hin' code for Hindi
        translated_text = translate_to_english(segment.text, info.language)
        print("Translated Hinglish/Hindi to English:", translated_text)
    else:
        print("Original Text:", segment.text)

end = time.time()
print("Execution time:", end - start)

